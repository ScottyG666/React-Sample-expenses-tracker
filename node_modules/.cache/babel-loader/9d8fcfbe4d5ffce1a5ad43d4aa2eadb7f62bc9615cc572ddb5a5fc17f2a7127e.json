{"ast":null,"code":"import _createForOfIteratorHelper from\"D:/PortfolioBuilderProjects/gh-pages-deployed/React-projects/expenses-tracker-Repo/React-Sample-expenses-tracker/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import React from'react';import Chart from'../Chart/Chart';//Props being passed is list of filtered expenses(By Year) which is \n//props.expenses\nimport{jsx as _jsx}from\"react/jsx-runtime\";var ExpensesChart=function ExpensesChart(props){var chartDataPoints=[{label:'Jan',value:0},{label:'Feb',value:0},{label:'Mar',value:0},{label:'Apr',value:0},{label:'May',value:0},{label:'Jun',value:0},{label:'Jul',value:0},{label:'Aug',value:0},{label:'Sep',value:0},{label:'Oct',value:0},{label:'Nov',value:0},{label:'Dec',value:0}];var _iterator=_createForOfIteratorHelper(props.expenses),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var expense=_step.value;var expenseMonth=expense.date.getMonth();/**\r\n     * getMonth()^^ returns a month based on a 0 indexed year, so jan is 0, \r\n     *  feb is 1, etc... this allows us to use the month as the index for the \r\n     *  chartDataPoints\r\n     */chartDataPoints[expenseMonth].value+=expense.amount;}}catch(err){_iterator.e(err);}finally{_iterator.f();}return/*#__PURE__*/_jsx(Chart,{dataPoints:chartDataPoints});};export default ExpensesChart;","map":{"version":3,"names":["React","Chart","ExpensesChart","props","chartDataPoints","label","value","expenses","expense","expenseMonth","date","getMonth","amount"],"sources":["D:/PortfolioBuilderProjects/gh-pages-deployed/React-projects/expenses-tracker-Repo/React-Sample-expenses-tracker/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\n//Props being passed is list of filtered expenses(By Year) which is \r\n  //props.expenses\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); \r\n    /**\r\n     * getMonth()^^ returns a month based on a 0 indexed year, so jan is 0, \r\n     *  feb is 1, etc... this allows us to use the month as the index for the \r\n     *  chartDataPoints\r\n     */\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n"],"mappings":"8NAAA,MAAOA,MAAK,KAAM,OAAO,CAEzB,MAAOC,MAAK,KAAM,gBAAgB,CAElC;AACE;AAAA,2CACF,GAAMC,cAAa,CAAG,QAAhBA,cAAa,CAAIC,KAAK,CAAK,CAC/B,GAAMC,gBAAe,CAAG,CACtB,CAAEC,KAAK,CAAE,KAAK,CAAEC,KAAK,CAAE,CAAE,CAAC,CAC1B,CAAED,KAAK,CAAE,KAAK,CAAEC,KAAK,CAAE,CAAE,CAAC,CAC1B,CAAED,KAAK,CAAE,KAAK,CAAEC,KAAK,CAAE,CAAE,CAAC,CAC1B,CAAED,KAAK,CAAE,KAAK,CAAEC,KAAK,CAAE,CAAE,CAAC,CAC1B,CAAED,KAAK,CAAE,KAAK,CAAEC,KAAK,CAAE,CAAE,CAAC,CAC1B,CAAED,KAAK,CAAE,KAAK,CAAEC,KAAK,CAAE,CAAE,CAAC,CAC1B,CAAED,KAAK,CAAE,KAAK,CAAEC,KAAK,CAAE,CAAE,CAAC,CAC1B,CAAED,KAAK,CAAE,KAAK,CAAEC,KAAK,CAAE,CAAE,CAAC,CAC1B,CAAED,KAAK,CAAE,KAAK,CAAEC,KAAK,CAAE,CAAE,CAAC,CAC1B,CAAED,KAAK,CAAE,KAAK,CAAEC,KAAK,CAAE,CAAE,CAAC,CAC1B,CAAED,KAAK,CAAE,KAAK,CAAEC,KAAK,CAAE,CAAE,CAAC,CAC1B,CAAED,KAAK,CAAE,KAAK,CAAEC,KAAK,CAAE,CAAE,CAAC,CAC3B,CAAC,yCAEoBH,KAAK,CAACI,QAAQ,YAApC,+CAAsC,IAA3BC,QAAO,aAChB,GAAMC,aAAY,CAAGD,OAAO,CAACE,IAAI,CAACC,QAAQ,EAAE,CAC5C;AACJ;AACA;AACA;AACA,OACIP,eAAe,CAACK,YAAY,CAAC,CAACH,KAAK,EAAIE,OAAO,CAACI,MAAM,CACvD,CAAC,qDAED,mBAAO,KAAC,KAAK,EAAC,UAAU,CAAER,eAAgB,EAAG,CAC/C,CAAC,CAED,cAAeF,cAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}